#
# ---------------------------------------------------------------------
# intel compiler on hexagon
# ---------------------------------------------------------------------
#
# MACROS      DESCRIPTIONS:
#
# FC:         Fortran 90 compiler.
# FCFFLAGS:   Fortran 90 compilation flags.
# CC:         C compiler.
# CCFLAGS:    C compilation flags.
# CPP:        cpp preprocessor (may be implied by FC).
# CPPFLAGS:   cpp -D macro flags.
# LD:         Loader.
# LDFLAGS:    Loader flags.
# EXTRALIBS:  Extra local libraries (if any).
#
#INCLUDES      = -I/cluster/software/netCDF-Fortran/4.4.4-intel-2017a-HDF5-1.8.18/include  -I${ESMF_MOD_DIR} -I${ESMF_DIR}include -I./CICE/rundir/compile
INCLUDES      = -I${ESMF_MOD_DIR} -I${ESMF_DIR}include -I./CICE/rundir/compile

FC            = mpifort 
#FCFFLAGS      =	-traceback -g -O2 -fp-model source -warn nogeneral -convert big_endian -assume byterecl -real-size 64 -integer-size 32 
FCFFLAGS      =	-g -convert big_endian -assume byterecl -cm -vec_report0 -w -O3 -tpp7 -xW -r8 
#FCFFLAGS      =	-traceback -g -O2 -check all -fp-stack-check -fp-model source -warn nogeneral -convert big_endian -assume byterecl -real-size 64 -integer-size 32 
#FCFFLAGS      =	-O2 -fconvert=big-endian -fdefault-real-8 -fdefault-double-8

FCFFLAGS     :=	$(FCFFLAGS) $(INCLUDES)

CC            = mpicc	
CCFLAGS       =	-O 

CPP           =	cpp -P
LD            =	$(FC)
#LDFLAGS       =	-V $(FCFFLAGS) -shared-intel -mcmodel=medium
LDFLAGS       =	$(FCFFLAGS) -mcmodel=medium

# ENDIAN_IO         not needed due to byteswap compiler flag
# NERSC_HYCOM_CICE  Code changes specific to our version 
#CPPFLAGS      =	-DIA32 -DREAL4
#
# if no STOKES:
CPPFLAGS      = -DIA32 -DREAL8 -DMPI -DSERIAL_IO -DNAN2003 -DTIMER -DRELO -DUSE_ESMF -DUSE_ESMF_5 -DNERSC_HYCOM_CICE
# for STOKES flag use
#CPPFLAGS      = -DIA32 -DREAL8 -DMPI -DSERIAL_IO -DNAN2003 -DTIMER -DRELO -DUSE_ESMF -DUSE_ESMF_5 -DNERSC_HYCOM_CICE -DSTOKES
#EXTRALIBS     = -L${ESMF_LIB_DIR}/ -lesmf -pgcpplibs  
#EXTRALIBS     = -L${ESMF_LIB_DIR}/ -lesmf -lfftw3 -lmkl -lnetcdff -lnetcdf -lmpi -lmpifort
EXTRALIBS     = -L${ESMF_LIB_DIR}/ -lesmf -lfftw3 -lmkl -lnetcdff -lnetcdf -lstdc++
# from fabm 
#CPPFLAGS      += -D_FABM_ -I${HOME}/local/fabm/hycom/include
#EXTRALIBS     += -L${HOME}/local/fabm/hycom/lib -lfabm

#
# --- generic make definitions
#
SHELL         = /bin/sh
RM            = \rm -f

#
# rules.
#

.c.o:
	$(CC) $(CPPFLAGS) $(CCFLAGS)  -c $*.c

.f.o:
	$(FC)             $(FCFFLAGS) -c $*.f

.F.o:
	$(FC) $(CPPFLAGS) $(FCFFLAGS) -c $*.F
   
#======= for Fabm use these

.f90.o:
	$(FC)             $(FCFFLAGS) -c $*.f90

.F90.o:
	$(FC) $(CPPFLAGS) $(FCFFLAGS) -c $*.F90

