#
# ---------------------------------------------------------------------
# intel compiler on Fram
# ---------------------------------------------------------------------
#
# MACROS      DESCRIPTIONS:
#
# FC:         Fortran 90 compiler.
# FCFFLAGS:   Fortran 90 compilation flags.
# CC:         C compiler.
# CCFLAGS:    C compilation flags.
# CPP:        cpp preprocessor (may be implied by FC).
# CPPFLAGS:   cpp -D macro flags.
# LD:         Loader.
# LDFLAGS:    Loader flags.
# EXTRALIBS:  Extra local libraries (if any).
#

####INCLUDES      = -I$(NETCFD_DIR)/include/

FC            = mpiifort 
FCFFLAGS      =	-g -convert big_endian -assume byterecl -cm -vec_report0 -w -O3 -tpp7 -xW -r8 
FCFFLAGS     :=	$(FCFFLAGS) $(INCLUDES) 

CC            = mpicc	
CCFLAGS       =	-O 


CPP           =	cpp -P
LD            =	$(FC)
LDFLAGS       =	$(FCFFLAGS) -mcmodel=medium

# ENDIAN_IO         not needed due to byteswap compiler flag
# NERSC_HYCOM_CICE  Code changes specific to our version 
#CPPFLAGS      =	-DIA32 -DREAL4
#
# if no STOKES:
# --- Mostafa: flags required for standalone HYCOM

CPPFLAGS      = -DIA32 -DREAL8 -DMPI -DSERIAL_IO -DNAN2003 -DTIMER -DRELO -DNERSC_HYCOM_CICE -DOFFICEField
# for STOKES flag use
#CPPFLAGS      = -DIA32 -DREAL8 -DMPI -DSERIAL_IO -DNAN2003 -DTIMER -DRELO -DUSE_ESMF -DUSE_ESMF_5 -DNERSC_HYCOM_CICE -DSTOKES
# --- Mostafa: flags required for standalone HYCOM
EXTRALIBS     =  $(LIBPSMILE)  -lfftw3 -lmkl -lnetcdff -lnetcdf -lmpi -lmpifort

# if you want to include ECOSMO, then you should
# add to EXPT.src or execute in the shell the following:
# export COMPILE_BIOMODEL="yes"

ifeq ($(COMPILE_BIOMODEL), yes)
   CPPFLAGS      += -D_FABM_ -I${HOME}/local/fabm/hycom/include
   EXTRALIBS     += -L${HOME}/local/fabm/hycom/lib64 -lfabm
endif

#
# --- generic make definitions
#
SHELL         = /bin/sh
RM            = \rm -f

#
# rules.
#

.c.o:
	$(CC) $(CPPFLAGS) $(CCFLAGS)  -c $*.c

.f.o:
	$(FC)             $(FCFFLAGS) -c $*.f

.F.o: 
	$(FC) $(CPPFLAGS) $(FCFFLAGS) -c $*.F 

   
#======= for Fabm use these

.f90.o:
	$(FC)  $(CCFLAGS) $(FCFFLAGS) -c $*.f90

.F90.o:
	$(FC) $(CPPFLAGS) $(FCFFLAGS) -c $*.F90


